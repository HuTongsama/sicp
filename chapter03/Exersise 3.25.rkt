#lang sicp
(define (make-table same-key?)
  (let ((local-table (list '*table*)))
    (define (assoc key records)
      (cond ((null? records) #f)
            ((same-key? key (caar records)) (car records))
            (else (assoc key (cdr records)))))
    (define (lookup keys)
      (define (iter cur-keys cur-table)
        (let ((subtable (assoc (car cur-keys) (cdr cur-table))))
          (if subtable
              (if (null? (cdr cur-keys))
                  (cdr subtable)
                  (iter (cdr cur-keys) (cdr subtable))))
          #f))
      (iter keys local-table))
    (define (insert! keys value)
      (define (iter cur-keys cur-table)
        (let ((subtable (assoc (car cur-keys) (cdr cur-table))))
          (if subtable
              (if (null? (cdr cur-keys))
                  (set-cdr! subtable value)
                  (iter (cdr cur-keys) (cdr subtable)))
              (set-cdr! cur-table
                        (cons
                         (list (car cur-keys) (cons (cdr cur-keys) value))
                         (cdr cur-table))))))
        (iter keys local-table))
    (define show-table
      (display local-table))
  (define (dispatch m)
    (cond ((eq? m 'lookup-proc) lookup)
          ((eq? m 'insert-proc!) insert!)
          ((eq? m 'show) display)
          (else (error "Unknown operation: TABLE" m))))
  dispatch))
(define t-t-t-t (make-table equal?)) 
 (define (table-insert! value . keys) 
   ((t-t-t-t 'insert-proc!) keys value)) 
 (define (table-delete! . keys) 
   ((t-t-t-t 'insert-proc!) keys nil)) 
 (define (table-lookup . keys) 
   ((t-t-t-t 'lookup-proc) keys)) 
 (define (table-show) 
   (t-t-t-t 'show))
 (table-insert! 'a 1 1)
;(table-show)
 ;(table-lookup 1 1) 
 ;(table-insert! 'b 2) 
 ;(table-insert! 'c 3) 
 ;(table-insert! 'c 2 3 4) 
 ;(table-insert! 'd 2 3 5) 
 ;(table-insert! 'e 2 3 6) 
 ;(table-lookup 3 4) 
 ;(table-lookup 2 3) 
 ;(table-lookup 2 3 4) 
 ;(table-lookup 1) 
 ;(table-insert! 'x 1 1) 
 ;(table-insert! 'y 2 3 4) 
 ;(table-lookup 1 1) 
 ;(table-lookup 2 3 4) 
 ;(table-delete! 2 3 4) 
 ;(table-lookup 2 3 4) 